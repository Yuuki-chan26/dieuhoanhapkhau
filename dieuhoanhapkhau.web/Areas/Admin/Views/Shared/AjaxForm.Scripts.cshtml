<script type="text/javascript">
	var mainFormValidationMethod = function () {
		return true;
	}

	$(function () {

		function showMessage(msg, cls) {
			alert(msg);
		}

		function hideMessages() {

		}
		var onSumitSuccess = function (response, statusText, xhr, $form) {
			var form = $form;
			if (response == undefined) {
				return false;
			}

			var responseData = response;

			if (typeof (responseData) == 'string') {

				responseData = $.parseJSON($(responseData).text());
			}


			hideMessages();
			//NextPortal.cms.ui.event.onSuccess(form, responseData);
			

			form.find("[type=submit]").removeClass("disabled").removeAttr("disabled");

			if (!responseData.Success) {
				var validator = form.validate();
				//                            var errors = [];
				for (var i = 0; i < responseData.FieldErrors.length; i++) {
					var obj = {};
					obj[responseData.FieldErrors[i].FieldName] = responseData.FieldErrors[i].ErrorMessage;
					validator.showErrors(obj);
				}

				if (response.Messages != undefined && response.Messages[0]) {
					showMessage(response.Messages[0], 'error');
				}
			}
			else {

				if (response.Messages != undefined && response.Messages[0]) {
					showMessage(response.Messages[0], 'info');
				}

				var continueResult = true;

				if (window.onSuccess && (typeof (onSuccess) == 'function')) {
					continueResult = onSuccess(responseData);
				}


				if (continueResult == true) {

					var pageRedirect = form.data("pageRedirect");

					//normal
					if (pageRedirect == undefined) {

						if (responseData.RedirectUrl) {

							var rUrl = responseData.RedirectUrl.replace("&amp;", "&");
							location.href = rUrl;
						}

					}

				}

			}
		};


		var ajaxFormParam = {
			async: true,
			dataType: 'json',
			
			beforeSend: function () {
				var form = $(this);

				form.find("[type=submit]").addClass("disabled").attr("disabled", true);
			},
			beforeSubmit: function (arr, $form, options) {

				if (!$form.valid()) {
					return false;
				}

				if (!mainFormValidationMethod())
				{
					return false;
				}
			},
			success: function (response, statusText, xhr, $form) {
				onSumitSuccess.call(this, response, statusText, xhr, $form)
			},
			error: function () {
				var form = $(this);

				form.find("[type=submit]").removeClass('disabled').removeAttr('disabled');
			}
		};


		function processForm(form) {

			form.submit(function () {
				// reset all the validation messer elements. (Change for textContent form.)
				form.find('.field-validation-error').empty();

				if (!form.valid()) {

					if (form.find('.tabs').length) {
						var selector = 'input.input-validation-error,select.input-validation-error';
						form.find(selector).parents('div.tab-content')
								.each(function () {
									var tab = $(this);
									var li = $('a[href="#' + tab.attr('id') + '"]')
									.hide().show('pulsate', {}, 100)
									.show('highlight', {}, 200)
									.show('pulsate', {}, 300)
									.show('highlight', {}, 400);
								});
					}
				}
			});


			if (!form.hasClass('no-ajax')) {
				form.ajaxForm(ajaxFormParam);
				form.submit(function () {

				}
				);
			}



		}



		$(document).ready(function () {
			$('form').each(function () {
				processForm($(this));
			});
		});


	});

</script>
